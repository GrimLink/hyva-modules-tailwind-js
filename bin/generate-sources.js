#!/usr/bin/env node

import fs from "node:fs/promises";
import { existsSync } from "node:fs";
import path from "node:path";
import { cwd } from "node:process";
import {
    consoleError,
    basePath,
    getRelativePath,
    getJsonFile,
} from "../src/utils/index.js";

const hyvaThemesJsonInclude = "hyva-themes.json";
const hyvaThemesJsonConfig = "hyva.config.json";
const includeConfig = getJsonFile(`app/etc/${hyvaThemesJsonInclude}`, {
    filePath: basePath,
    errorMessage: `No ${hyvaThemesJsonInclude} found, make sure to create one with 'bin/magento hyva:config:generate'`,
});
const hyvaConfig = getJsonFile(hyvaThemesJsonConfig);
const filteredModules =
    includeConfig.extensions?.filter((module) => {
        const isExcluded = hyvaConfig.tailwind?.exclude?.some(
            (excluded) => excluded.src === module.src
        );
        return !isExcluded;
    }) ?? [];
const includedModules = hyvaConfig.tailwind?.include ?? [];
const hyvaModules = [...filteredModules, ...includedModules];

const { importStatements, sourceStatements, moduleStatements } =
    hyvaModules?.reduce(
        (acc, theme) => {
            const themePath = getRelativePath(theme.src);
            const themeCSSPath = getRelativePath(theme.src, "generated");

            const tailwindCSSPath = path.join(
                themePath,
                "view/frontend/tailwind/module.css"
            );
            const tailwindSourceCSSPath = path.join(
                themePath,
                "view/frontend/tailwind/tailwind-source.css"
            );

            const importPath = (cssPath) =>
                `@import "${themeCSSPath}/view/frontend/tailwind/${cssPath}";\n`;

            if (existsSync(tailwindCSSPath)) {
                acc.moduleStatements += importPath("module.css");
            } else {
                acc.sourceStatements += `@source "${themeCSSPath}/**/*.phtml";\n`;
                acc.sourceStatements += `@source "${themeCSSPath}/**/*.xml";\n`;
                if (existsSync(tailwindSourceCSSPath)) {
                    acc.importStatements += importPath("tailwind-source.css");
                }
            }
            return acc;
        },
        { importStatements: "", sourceStatements: "", moduleStatements: "" }
    ) ?? { importStatements: "", sourceStatements: "", moduleStatements: "" };

const hyvaSourceCSS = `/**
 * This file is automatically generated.
 * Do not edit this file!
 *
 * To prevent modules from being added,
 * please exclude them in your theme using the ${hyvaThemesJsonConfig} configuration.
 */\n\n${sourceStatements}\n${importStatements}\n${moduleStatements}\n`;

(async () => {
    try {
        await fs.mkdir(path.join(cwd(), "generated"), { recursive: true });
        await fs.writeFile(
            path.join(cwd(), "generated/hyva-source.css"),
            hyvaSourceCSS
        );
    } catch (err) {
        consoleError(
            "Failed to generate hyva-source.css:\n" +
                (err && err.stack ? err.stack : err)
        );
        exit(1);
    }
})();
